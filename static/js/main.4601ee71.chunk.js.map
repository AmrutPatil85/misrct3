{"version":3,"sources":["logo.svg","Components/Employee.js","Components/MonthwisePurOrdAmtSummary.js","Components/MonthwisePurOrdQtySummary.js","Components/PartywisePurOrdAmtSummary.js","Components/ItemwisePurOrdQtySummary.js","Components/ItemwisePurQtyWgtAmtBillsub.js","Components/MonthwisePurAmtBillsub.js","Components/PartywisePurAmtBillsub.js","SalesComponent/MonthwiseSalesAmt.js","SalesComponent/MonthwiseSalesAmtQtyWgt.js","SalesComponent/PartywiseSalesAmt.js","SalesComponent/PartywiseSalesQtyWeight.js","SalesComponent/ItemwiseSalesQtyWgt.js","SalesComponent/DailySalesDispatchItemwise.js","SalesComponent/MonthlyRateAmtWgt.js","MaterialManComponent/MonthwiseGoodsInwardAmtSummary.js","MaterialManComponent/MonthwiseGoodsInwardQtyWgtSummary.js","MaterialManComponent/PartywiseGoodsInwardAmtSummary.js","MaterialManComponent/ItemwiseGoodsInwardQtyWgtSummary.js","MaterialManComponent/ItemwiseIssueQtyWgtSummary.js","MaterialManComponent/ProcessingIssue.js","MaterialManComponent/ProcessingReeived.js","MaterialManComponent/ItemwiseStock.js","ProductionComponent/MonthwiseMouldingQtySummary.js","ProductionComponent/ItemwiseMouldingQtySummary.js","ProductionComponent/ContractorwiseMouldingQtySummary.js","ProductionComponent/MonthwisePouringQtyWgtSummary.js","ProductionComponent/ItemwisePouringQtyWgtSummary.js","ProductionComponent/ContractorWisePouringQtyWgtSummary.js","ProductionComponent/MonthwiseConsumptionQtyWgtSummary.js","ProductionComponent/ItemwiseConsumptionQtyWgtSummary.js","ProductionComponent/ContractorwiseConsumptionQtyWgtSummary.js","ProductionComponent/MonthwiseProductionQtyWgtSummary.js","ProductionComponent/ItemwiseProductionQtyWgtSummary.js","ProductionComponent/ContractorwiseProductionQtyWgtSummary.js","ProductionComponent/MonthwiseFirstRejectionQtyWgtSummary.js","ProductionComponent/ItemwiseFirstRejectionQtyWgtSummary.js","ProductionComponent/ContractorwiseFirstRejectionQtyWgtSummary.js","ProductionComponent/MonthwiseIINDRejQtyWgtSummary.js","ProductionComponent/ItemwiseIINDRejQtyWgtSummary.js","ProductionComponent/PartywiseIINDRejQtyWgtSummary.js","ProductionComponent/MonthwisePartyRejQtyWgt.js","ProductionComponent/ItemwisePartyRejQtyWgtSummary.js","ProductionComponent/PartywisePartyRejQtyWgtSummary.js","ProductionComponent/MonthwisePartyRejAnalysisQtyWgtSummary.js","ProductionComponent/ItemwisePartyRejAnalysisQtyWgtSummary.js","ProductionComponent/PartywisePartyRejAnalysisQtyWgtSummary.js","ProductionComponent/ItemwiseMouldVsPour.js","ProductionComponent/ItemwiseProdVsRej.js","AccountsComponent/TradingExpenses.js","AccountsComponent/TradingIncomes.js","AccountsComponent/PLExpenses.js","AccountsComponent/PLIncomes.js","AccountsComponent/DebtorsList.js","AccountsComponent/CreditorsList.js","AccountsComponent/FixedAssets.js","AccountsComponent/CurrentAssets.js","AccountsComponent/EntriesTransactions.js","AccountsComponent/InventoryBillSub.js","AccountsComponent/InventoryGRN.js","Navigation.js","Layout.js","Dashboard.js","Login1.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["Employee","props","Changedate","e","setState","startdate","enddate","accode","target","value","itcode","check1","check2","onsubmit","data","state","preventDefault","axios","post","then","response","console","log","employeedata","onsubmit1","por","qty","achead","forEach","record","push","Qty","ACHEAD","Data","labels","datasets","label","backgroundColor","onsubmit2","Amt","Data1","Date","loading","get","this","getEmployeeList","className","type","selected","onChange","placeholder","placeholderText","showPopperArrow","onClick","width","height","options","responsive","maintainAspectRatio","barThickness","scales","xAxes","barPercentage","Table","class","stiped","bordered","hover","size","map","p","index","EntryNo","TrDate","ItCode","ACCode","ITEMNAME","Rate","React","Component","MPOAS","Amount","MonthName","title","text","Year","MPOQS","wgt","Quantity","Wgt","categoryPercentage","Partywise","PartyCode","PartyName","Itemwise","Itcode","Itemcode","Itemname","ItemwiseBillsub","MPAB","PartywiseBillsub","MSAB","MSAQWB","amt","PartywiseSalesBillentry","PartywiseSalesQtyBillentry","ItemwiseSalesQtyWgt","DailyItemwiseSalesQtyWgt","MRAWB","MGIAS","MGIQWS","PartywiseGIAS","ItemwiseGIQWS","ItemwiseIssueQWS","Processingissue","Accode","ItemCode","ItemName","Processingreceived","ItemwiseStock","MonthwiseMouldingQty","ItemwiseMouldingQty","ContractorwiseMouldingQty","Contractorcode","Contractorname","MonthwisePouringQtyWgt","ItemwisePouringingQtyWgt","ContractorwisePouringQtyWgt","MonthwiseConsumptionQtyWgt","ItemwiseConsumptionQtyWgt","ContractorwiseConsumptionQtyWgt","MonthwiseProductionQtyWgt","ItemwiseProductionQtyWgt","ContractorwiseProductionQtyWgt","MonthwiseFirstRejectionQtyWgt","ItemwiseFirstRejectionQtyWgt","ContractorwiseFirstRejectionQtyWgt","MonthwiseIINDRejectionQtyWgt","ItemwiseIINDRejectionQtyWgt","PartywiseIINDRejQtyWgt","Partycode","Partyname","MonthwisePartyRejectionQtyWgt","ItemwisePartyRejectionQtyWgt","PartywisePartyRejQtyWgt","MonthwisePartyRejectionAnalysisQtyWgt","ItemwisePartyRejectionAnalysisQtyWgt","PartywisePartyRejAnalysisQtyWgt","ItemwiseMouldingPouring","MOULDQTY","POURQTY","Balance","ItemwiseProductionRejecction","Tradingexpenses","Tradingincomes","PLexpenses","PLincomes","scaleBeginAtZero","yAxes","ticks","DebList","CreList","FixAssets","CurAssets","Entriestran","Count","Flag","align","border","InventoryBillSub","InventoryGRN","NavMenu","toggleNavbar","bind","toggle","toggle1","toggle2","toggle3","toggle4","toggle5","toggle6","toggle7","toggle8","toggle9","toggle10","toggle11","toggle12","collapsed","localStorage","clear","a","getItem","warn","window","location","href","dropdownOpen","dropdownOpen1","dropdownOpen2","dropdownOpen3","dropdownOpen4","dropdownOpen5","dropdownOpen6","dropdownOpen7","dropdownOpen8","dropdownOpen9","dropdownOpen10","dropdownOpen11","dropdownOpen12","Navbar","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","Collapse","isOpen","navbar","NavItem","Dropdown","DropdownToggle","nav","caret","DropdownMenu","DropdownItem","direction","logout","path","displayName","name","Layout","children","Dashboard","useHistory","JSON","parse","useState","Username","Password","user","setuser","useEffect","b","USERNAME","component","Login1","employee","setemployee","persist","onSubmit","result","serializedState","stringify","UserDetails","setItem","message","status","history","alert","id","block","Home","App","Switch","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4601ee71.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport { Table,Form,Button } from \"react-bootstrap\";\r\nimport { Input} from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport { BeatLoader } from \"react-spinners\";\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class Employee extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { \r\n            employeedata: [] ,\r\n            Data: [] ,\r\n            Data1:[],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n            accode:'',\r\n            itcode:'',\r\n            check1:'',\r\n            check2:'',\r\n            loading: true,\r\n            \r\n        }\r\n        \r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n    itcode = (e) => {\r\n        this.setState({\r\n            itcode: e.target.value\r\n        });\r\n    };\r\n    check1 = (e) => {\r\n        this.setState({\r\n            check1: e.target.value\r\n        });\r\n    };\r\n    check2 = (e) => {\r\n        this.setState({\r\n            check2: e.target.value\r\n        });\r\n    };\r\n   \r\n\r\n    getEmployeeList() {\r\n        \r\n        axios.get('http://webapi.local/Api/Misrct_new1/showdata')\r\n        .then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data,\r\n                \r\n\r\n            });\r\n        });  \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n        \r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n        const data = { accode: this.state.accode, itcode: this.state.itcode, startdate: this.state.startdate, enddate: this.state.enddate };\r\n       \r\n        \r\n        \r\n        e.preventDefault();\r\n        axios.post('http://webapi.local/Api/Misrct_new1/search', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n                 \r\n            });\r\n        });\r\n\r\n        \r\n         \r\n    } \r\n\r\n    onsubmit1 = (e) => {\r\n        //debugger;\r\n        const data = { accode: this.state.accode, itcode: this.state.itcode, startdate: this.state.startdate, enddate: this.state.enddate };\r\n        e.preventDefault();\r\n       \r\n           axios.post(`http://webapi.local/Api/Misrct_new1/search`, data)\r\n               .then(response => {\r\n                   console.log(response);\r\n                   const por = response.data;\r\n                   let qty = [];\r\n                   let achead = [];\r\n                   por.forEach(record => {\r\n                       qty.push(record.Qty);\r\n                       achead.push(record.ACHEAD);\r\n                   });\r\n                   this.setState({\r\n                       Data: {\r\n                           labels: achead,\r\n\r\n                           datasets: [\r\n                               {\r\n                                   label: 'Quantity',\r\n                                   data: qty,\r\n                                   backgroundColor: [\r\n                                       \r\n                                       \"#3cb371\",\r\n                                       \"#0000FF\",\r\n                                       \"#9966FF\",\r\n                                       \"#4C4CFF\",\r\n                                       \"#00FFFF\",\r\n                                       \"#f990a7\",\r\n                                       \"#aad2ed\",\r\n                                       \"#FF00FF\",\r\n                                       \"Blue\",\r\n                                       \"Red\",\r\n                                       \"#3cb371\",\r\n                                       \"#0000FF\",\r\n                                       \"#9966FF\",\r\n                                       \"#4C4CFF\",\r\n                                       \"#00FFFF\",\r\n                                       \"#f990a7\",\r\n                                       \"#aad2ed\",\r\n                                       \"#FF00FF\",\r\n                                       \"Blue\",\r\n                                       \"Red\"\r\n                                   ]\r\n                               }\r\n                           ]\r\n                       }\r\n                   });\r\n               })\r\n        \r\n    } \r\n    onsubmit2 = (e) => {\r\n        //debugger;\r\n        const data = { accode: this.state.accode, itcode: this.state.itcode, startdate: this.state.startdate, enddate: this.state.enddate };\r\n        e.preventDefault();\r\n        \r\n        axios.post(`https://webapi.local/Api/Misrct_new1/search`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amt);\r\n                    achead.push(record.ACHEAD);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n                                ],\r\n                                //borderColor: 'rgb(255, 99, 132)',\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n            \r\n\r\n    } \r\n\r\n  \r\n   \r\n\r\n  \r\n    render() {\r\n         const { employeedata } = this.state;\r\n       \r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Purchase Order Register</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n                        \r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                                ></input>\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.itcode}\r\n                                onChange={this.itcode}\r\n                                placeholder=\"Item Code\"\r\n                            \r\n                            ></input>\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n                                \r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate} \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"col-sm-3 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                            &nbsp;&nbsp;&nbsp;\r\n                            &nbsp;&nbsp;&nbsp;\r\n                            <label>\r\n                                <input type=\"button\" className=\"btn btn-success\" value=\"Quantity\" selected={this.state.check1} onClick={this.onsubmit1} />\r\n                            </label>\r\n                            &nbsp;&nbsp;&nbsp;\r\n                             &nbsp;&nbsp;&nbsp;\r\n                            <label>\r\n                                <input type=\"button\" className=\"btn btn-success\" value=\"Amount\" selected={this.state.check2} onClick={this.onsubmit2} />\r\n                            </label>\r\n                        </div>\r\n                        \r\n                      \r\n\r\n                    </div>\r\n                    \r\n\r\n                   \r\n\r\n                </form>\r\n                <br></br>\r\n              \r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300} \r\n                        options={{ \r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n                            \r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.4\r\n                                    }\r\n                                ]\r\n                            }\r\n                            }}\r\n                        \r\n                    />\r\n                </div>\r\n\r\n                \r\n                \r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    \r\n                    <thead >\r\n                       \r\n                        <tr className=\"align1\">\r\n                            <th>Entry No</th>\r\n                            <th >Date</th>\r\n                            <th >PO</th>\r\n                            <th >Party </th>\r\n                            <th >Qty</th>\r\n                            <th >Rate</th>\r\n                            <th>Amount</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p,index) => {\r\n                                return <tr key={index}>\r\n                                    <th >{p.EntryNo}</th>\r\n                                    <th>{p.TrDate}</th>\r\n                                    <th>{p.TrDate}<br></br><br></br><strong>{p.ItCode}</strong></th>\r\n                                    <th><strong>{p.ACCode}</strong>{'--' + p.ACHEAD}<br></br><br></br>{p.ITEMNAME}</th>\r\n                                    <th>{p.Qty}</th>\r\n                                    <th>{p.Rate}</th>\r\n                                    <th>{p.Amt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default Employee;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class MPOAS extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n          \r\n           \r\n        }\r\n        \r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n   \r\n\r\n    getEmployeeList() {\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWisePurchaseOrderAmount', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n        \r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n      \r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWisePurchaseOrderAmount', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthWisePurchaseOrderAmount`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n                          \r\n\r\n                                  \r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Monthwise Purchase Order-Amount Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n                       \r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n                        \r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                   \r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n                \r\n                        \r\n                        options={{\r\n                            \r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n                           \r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.6,\r\n                                        title: { text: \"Months\" }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Year</th>\r\n                            <th >Month</th>\r\n                            <th >Amount</th>\r\n                           \r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Year}</th>\r\n                                    <th>{p.MonthName}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MPOAS;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class MPOQS extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n           \r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n   \r\n\r\n    getEmployeeList() {\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWisePurchaseOrderQuantityWeight', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWisePurchaseOrderQuantityWeight', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthWisePurchaseOrderQuantityWeight`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt= [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \r\n\r\n\r\n                                ]\r\n                                \r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n                \r\n                                   \r\n\r\n                                    \r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n\r\n                        ] \r\n                    }\r\n                });\r\n                \r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Monthwise Purchase Order- Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                        \r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Year</th>\r\n                            <th >Month</th>\r\n                            <th >Quantity</th>\r\n                            <th >Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Year}</th>\r\n                                    <th>{p.MonthName}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n                                    \r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MPOQS;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class Partywise extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            accode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n  \r\n\r\n    getEmployeeList() {\r\n         \r\n        const data = { accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PartyWisePurchaseOrderAmount', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n       \r\n        const data = { accode: this.state.accode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PartyWisePurchaseOrderAmount', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/PartyWisePurchaseOrderAmount`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.PartyCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n                                   \r\n                                     \r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Partywise Purchase Amount</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.2,\r\n                                        title: { text: \"Months\" }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>PartyCode</th>\r\n                            <th>PartyName</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.PartyCode}</th>\r\n                                    <th>{p.PartyName}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Partywise;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class Itemwise extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            Itcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWisePurchaseOrderQuantity', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWisePurchaseOrderQuantity', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ItemWisePurchaseOrderQuantity`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Itemwise Purchase Order Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Quantity</th>\r\n                            <th>Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Itemwise;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\nimport { convertColorToString } from 'material-ui/utils/colorManipulator';\r\n\r\n\r\n\r\nexport class ItemwiseBillsub extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            Itcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWisePurchaseQuantityWeightAmountBillsub', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n   \r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n       \r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWisePurchaseQuantityWeightAmountBillsub', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ItemWisePurchaseQuantityWeightAmountBillsub`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let Amt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    Amt.push(record.Amount);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: Amt,\r\n                                backgroundColor: [\r\n                                    \"#FF000F\",\r\n                                    \"#FF000F\",\r\n                                    \"#FF000F\",\r\n                                    \"#FF000F\",\r\n                                    \"#FF000F\",\r\n                                    \"#FF000F\",\r\n                                    \"#FF000F\",\r\n                                    \"#FF000F\",\r\n                                    \"#FF000F\",\r\n                                    \"#FF000F\",\r\n                                    \"#FF000F\",\r\n                                    \"#FF000F\",\r\n                                    \"#FF000F\",\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Itemwise Purchase  Quantity/Weight/Amount </h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n\r\n                           \r\n                          \r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Quantity</th>\r\n                            <th>Weight</th>\r\n                            <th>Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemwiseBillsub;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class MPAB extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n    getEmployeeList() {\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWisePurchaseAmountBillsub', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWisePurchaseAmountBillsub', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthWisePurchaseAmountBillsub`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\", \r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Monthwise Purchase Amount </h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.4,\r\n                                        title: { text: \"Months\" }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                           \r\n                            <th>Year</th>\r\n                            <th >Month</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                   \r\n                                    <th>{p.Year}</th>\r\n                                    <th>{p.MonthName}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MPAB;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class PartywiseBillsub extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            accode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PartyWisePurchaseAmountBillsub', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { accode: this.state.accode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PartyWisePurchaseAmountBillsub', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/PartyWisePurchaseAmountBillsub`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.PartyCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Partywise Purchase Order-Amount Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.2,\r\n                                        title: { text: \"Months\" }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>PartyCode</th>\r\n                            <th>PartyName</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.PartyCode}</th>\r\n                                    <th>{p.PartyName}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PartywiseBillsub;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class MSAB extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n            loading:false,\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n    getEmployeeList() {\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n        //e.preventDefault();'\r\n       this.setState({loading: true});\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseSalesAmountBillsub', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n       \r\n        this.getEmployeeList();\r\n\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n        this.setState({ loading: true });\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseSalesAmountBillsub', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n        this.setState({ loading: true });\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthWiseSalesAmountBillsub`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata,loading } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Monthwise Sales Amount </h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" \r\n                            className=\"btn btn-success\" \r\n                            onClick={this.onsubmit}\r\n                           >\r\n                            Search\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.4,\r\n                                        title: { text: \"Months\" }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n               \r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n\r\n                            <th>Year</th>\r\n                            <th >Month</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n\r\n                                    <th>{p.Year}</th>\r\n                                    <th>{p.MonthName}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MSAB;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class MSAQWB extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n            loading: false,\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n    getEmployeeList() {\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n        //e.preventDefault();'\r\n        this.setState({ loading: true });\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseSalesAmountQtyWgtBillsub', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.getEmployeeList();\r\n\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n        this.setState({ loading: true });\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseSalesAmountQtyWgtBillsub', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n        this.setState({ loading: true });\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthWiseSalesAmountQtyWgtBillsub`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let amt=[];\r\n                let wgt=[];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    amt.push(record.Amount);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n                                ]\r\n\r\n                            },\r\n                            \r\n                        ]\r\n                    }\r\n                });\r\n                \r\n            })\r\n\r\n\r\n            //Amount Chart\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthWiseSalesAmountQtyWgtBillsub`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data1: {\r\n                        labels: achead,\r\n\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n                                ],\r\n                                //borderColor: 'rgb(255, 99, 132)',\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata, loading } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Monthwise Sales Amount Quantity/Weight </h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\"\r\n                                className=\"btn btn-success\"\r\n                                onClick={this.onsubmit}\r\n                            >\r\n                                Search\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <form>\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-6 form-group\">\r\n                            <Bar data={this.state.Data}\r\n                                width={600} height={300}\r\n\r\n\r\n                                options={{\r\n\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                    barThickness: 1,\r\n\r\n                                    scales: {\r\n                                        xAxes: [\r\n                                            {\r\n                                                barThickness: 40,\r\n                                                barPercentage: 0.5,\r\n                                                categoryPercentage: 0,\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                }}\r\n\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"col-sm-6 form-group\">\r\n                            <Bar data={this.state.Data1}\r\n                                width={600} height={300}\r\n\r\n\r\n                                options={{\r\n\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                    barThickness: 1,\r\n\r\n                                    scales: {\r\n                                        xAxes: [\r\n                                            {\r\n                                                barThickness: 40,\r\n                                                barPercentage: 0.5,\r\n                                                categoryPercentage: 0,\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                }}\r\n\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </form>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr className=\"align1\">\r\n\r\n                            <th>Year</th>\r\n                            <th >Month</th>\r\n                            <th >Quantity</th>\r\n                            <th >Weight</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n\r\n                                    <th>{p.Year}</th>\r\n                                    <th>{p.MonthName}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MSAQWB;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar, Pie, Doughnut  } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class PartywiseSalesBillentry extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            accode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PartyWiseSalesAmount', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { accode: this.state.accode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PartyWiseSalesAmount', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/PartyWiseSalesAmount`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.PartyCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Partywise Sales Amount </h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n                <form>\r\n                    <div className=\"row hdr\" >\r\n                <div className=\"col-sm-6 form-group\">\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.2,\r\n                                        title: { text: \"Months\" }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                   {/*  <Doughnut \r\n                        data={this.state.Data}\r\n                        width={600} height={300}\r\n                        options={{ maintainAspectRatio: false }} /> */}\r\n                </div>\r\n\r\n                <div className=\"col-sm-6 form-group\">\r\n                    \r\n                    <Pie\r\n                        data={this.state.Data}\r\n                        width={600} height={300}\r\n                        options={{ maintainAspectRatio: false }} />\r\n                </div><br></br><br></br>\r\n                        </div>\r\n                </form>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>PartyCode</th>\r\n                            <th>PartyName</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.PartyCode}</th>\r\n                                    <th>{p.PartyName}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PartywiseSalesBillentry;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar, Pie, Doughnut } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class PartywiseSalesQtyBillentry extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            accode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PartyWiseSalesQtyWgt', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { accode: this.state.accode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PartyWiseSalesQtyWgt', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/PartyWiseSalesQtyWgt`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt=[];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.PartyCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\"\r\n\r\n                                   \r\n\r\n\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                   \r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Partywise Sales Quantity/Weight </h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n                <form>\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-12 form-group\">\r\n                            <Bar data={this.state.Data}\r\n                                width={600} height={300}\r\n\r\n\r\n                                options={{\r\n\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                    barThickness: 1,\r\n\r\n                                    scales: {\r\n                                        xAxes: [\r\n                                            {\r\n                                                barThickness: 40,\r\n                                                barPercentage: 0.5,\r\n                                                categoryPercentage: 0,\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                }}\r\n\r\n                            />\r\n                            {/*  <Doughnut \r\n                        data={this.state.Data}\r\n                        width={600} height={300}\r\n                        options={{ maintainAspectRatio: false }} /> */}\r\n                        </div>\r\n\r\n                       \r\n                    </div>\r\n                </form>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>PartyCode</th>\r\n                            <th>PartyName</th>\r\n                            <th >Quantity</th>\r\n                            <th >Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.PartyCode}</th>\r\n                                    <th>{p.PartyName}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PartywiseSalesQtyBillentry;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar, Pie, Doughnut } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ItemwiseSalesQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            Itcode: '',\r\n            \r\n        }\r\n\r\n\r\n\r\n    }\r\n    \r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode  };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseSalesQuantityWgt', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode};\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseSalesQuantityWgt', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ItemWiseSalesQuantityWgt`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\"\r\n\r\n\r\n\r\n\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Itemwise Sales Quantity/Weight </h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n                <form>\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-12 form-group\">\r\n                            <Bar data={this.state.Data}\r\n                                width={600} height={300}\r\n\r\n\r\n                                options={{\r\n\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                    barThickness: 1,\r\n\r\n                                    scales: {\r\n                                        xAxes: [\r\n                                            {\r\n                                                barThickness: 40,\r\n                                                barPercentage: 0.5,\r\n                                                categoryPercentage: 0,\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                }}\r\n\r\n                            />\r\n                           \r\n                        </div>\r\n\r\n                        \r\n                    </div>\r\n                </form>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>ItemCode</th>\r\n                            <th>ItemName</th>\r\n                            <th >Quantity</th>\r\n                            <th >Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemwiseSalesQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar, Pie, Doughnut } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class DailyItemwiseSalesQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            Itcode: '',\r\n            startdate: new Date(),\r\n            enddate: new Date(),\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode, startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/DailyItemWiseSalesQuantityWgt', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode, startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/DailyItemWiseSalesQuantityWgt', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/DailyItemWiseSalesQuantityWgt`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\"\r\n\r\n\r\n\r\n\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Daily Sales Dispatch Itemwise Quantity/Weight </h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n                <form>\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-12 form-group\">\r\n                            <Bar data={this.state.Data}\r\n                                width={800} height={300}\r\n\r\n\r\n                                options={{\r\n\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                    barThickness: 1,\r\n\r\n                                    scales: {\r\n                                        xAxes: [\r\n                                            {\r\n                                                barThickness: 40,\r\n                                                barPercentage: 0.5,\r\n                                                categoryPercentage: 0,\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                }}\r\n\r\n                            />\r\n                            {/*  <Doughnut \r\n                        data={this.state.Data}\r\n                        width={600} height={300}\r\n                        options={{ maintainAspectRatio: false }} /> */}\r\n                        </div>\r\n\r\n                        \r\n                    </div>\r\n                </form>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>ItemCode</th>\r\n                            <th>ItemName</th>\r\n                            <th >Date</th>\r\n                            <th >Quantity</th>\r\n                            <th >Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.Date}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyItemwiseSalesQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class MRAWB extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n            loading: false,\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n    getEmployeeList() {\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n        //e.preventDefault();'\r\n        this.setState({ loading: true });\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthlySalesAmountRateWgtBillsub', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.getEmployeeList();\r\n\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n        this.setState({ loading: true });\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthlySalesAmountRateWgtBillsub', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n        this.setState({ loading: true });\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthlySalesAmountRateWgtBillsub`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let amt = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Rate);\r\n                    wgt.push(record.Wgt);\r\n                    amt.push(record.Amount);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n                                ]\r\n\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                });\r\n\r\n            })\r\n\r\n\r\n        //Amount Chart\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthlySalesAmountRateWgtBillsub`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data1: {\r\n                        labels: achead,\r\n\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n                                ],\r\n                                //borderColor: 'rgb(255, 99, 132)',\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata, loading } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Monthly Per/Kg Rate Amount/Weight </h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\"\r\n                                className=\"btn btn-success\"\r\n                                onClick={this.onsubmit}\r\n                            >\r\n                                Search\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n\r\n                <form>\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-6 form-group\">\r\n                            <Bar data={this.state.Data}\r\n                                width={600} height={300}\r\n\r\n\r\n                                options={{\r\n\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                    barThickness: 1,\r\n\r\n                                    scales: {\r\n                                        xAxes: [\r\n                                            {\r\n                                                barThickness: 40,\r\n                                                barPercentage: 0.5,\r\n                                                categoryPercentage: 0,\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                }}\r\n\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"col-sm-6 form-group\">\r\n                            <Bar data={this.state.Data1}\r\n                                width={600} height={300}\r\n\r\n\r\n                                options={{\r\n\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                    barThickness: 1,\r\n\r\n                                    scales: {\r\n                                        xAxes: [\r\n                                            {\r\n                                                barThickness: 40,\r\n                                                barPercentage: 0.5,\r\n                                                categoryPercentage: 0,\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                }}\r\n\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </form>\r\n\r\n                \r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n\r\n                            <th>Year</th>\r\n                            <th >Month</th>\r\n                            <th >Rate</th>\r\n                            <th >Weight</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n\r\n                                    <th>{p.Year}</th>\r\n                                    <th>{p.MonthName}</th>\r\n                                    <th>{p.Rate}</th>\r\n                                    <th>{p.Wgt}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MRAWB;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\n import { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class MGIAS extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n    getEmployeeList() {\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseGoodsInwardAmount', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseGoodsInwardAmount', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthWiseGoodsInwardAmount`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Monthwise Goods Inward Amount Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.6,\r\n                                        title: { text: \"Months\" }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Year</th>\r\n                            <th >Month</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Year}</th>\r\n                                    <th>{p.MonthName}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MGIAS;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class MGIQWS extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n    getEmployeeList() {\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseGoodsInwardQuantityWeight', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseGoodsInwardQuantityWeight', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthWiseGoodsInwardQuantityWeight`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                });\r\n\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Monthwise Goods Inward- Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Year</th>\r\n                            <th >Month</th>\r\n                            <th >Quantity</th>\r\n                            <th >Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Year}</th>\r\n                                    <th>{p.MonthName}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MGIQWS;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class PartywiseGIAS extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            accode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PartyWiseGoodsInwardAmount', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { accode: this.state.accode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PartyWiseGoodsInwardAmount', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/PartyWiseGoodsInwardAmount`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.PartyCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Partywise Goods Inward Amount Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.2,\r\n                                        title: { text: \"Months\" }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>PartyCode</th>\r\n                            <th>PartyName</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.PartyCode}</th>\r\n                                    <th>{p.PartyName}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PartywiseGIAS;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ItemwiseGIQWS extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            Itcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseGoodsInwardQuantityWeight', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseGoodsInwardQuantityWeight', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ItemWiseGoodsInwardQuantityWeight`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Itemwise Goods Inward Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Quantity</th>\r\n                            <th>Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemwiseGIQWS;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ItemwiseIssueQWS extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            Itcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseIssueQuantityWeight', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseIssueQuantityWeight', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ItemWiseIssueQuantityWeight`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Itemwise Issue Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Quantity</th>\r\n                            <th>Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemwiseIssueQWS;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class Processingissue extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            Itcode: '',\r\n            Accode: '',\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n    Accode = (e) => {\r\n        this.setState({\r\n            Accode: e.target.value\r\n        });\r\n    };\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Accode: this.state.Accode, Itcode: this.state.Itcode, startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ProcessingIssue', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Accode: this.state.Accode, Itcode: this.state.Itcode, startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ProcessingIssue', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ProcessingIssue`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    //wgt.push(record.Wgt);\r\n                    achead.push(record.ItemCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                            // {\r\n                            //     label: 'Weight Summary',\r\n                            //     data: wgt,\r\n                            //     backgroundColor: [\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            //     ]\r\n\r\n                            // }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Processing Issue Partywise/Itemwise Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Accode}\r\n                                onChange={this.Accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n                        \r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Partycode</th>\r\n                            <th>Partyname</th>\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Date</th>\r\n                            <th>Quantity</th>\r\n                            \r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.PartyCode}</th>\r\n                                    <th>{p.PartyName}</th>\r\n                                    <th>{p.ItemCode}</th>\r\n                                    <th>{p.ItemName}</th>\r\n                                    <th>{p.TrDate}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    \r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Processingissue;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class Processingreceived extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            Itcode: '',\r\n            Accode: '',\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n    Accode = (e) => {\r\n        this.setState({\r\n            Accode: e.target.value\r\n        });\r\n    };\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Accode: this.state.Accode, Itcode: this.state.Itcode, startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ProcessingReceived', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Accode: this.state.Accode, Itcode: this.state.Itcode, startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ProcessingReceived', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ProcessingReceived`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    //wgt.push(record.Wgt);\r\n                    achead.push(record.ItemCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                            // {\r\n                            //     label: 'Weight Summary',\r\n                            //     data: wgt,\r\n                            //     backgroundColor: [\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n                            //         \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            //     ]\r\n\r\n                            // }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Processing Received Partywise/Itemwise Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Accode}\r\n                                onChange={this.Accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Partycode</th>\r\n                            <th>Partyname</th>\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Date</th>\r\n                            <th>Quantity</th>\r\n\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.PartyCode}</th>\r\n                                    <th>{p.PartyName}</th>\r\n                                    <th>{p.ItemCode}</th>\r\n                                    <th>{p.ItemName}</th>\r\n                                    <th>{p.TrDate}</th>\r\n                                    <th>{p.Quantity}</th>\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Processingreceived;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ItemwiseStock extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            Itcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseStockQuantity', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseStockQuantity', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ItemWiseStockQuantity`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Itemwise Stock Quantity</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Quantity</th>\r\n                           \r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    \r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemwiseStock;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class MonthwiseMouldingQty extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n    getEmployeeList() {\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseMouldingQtySummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseMouldingQtySummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthWiseMouldingQtySummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Monthwise Moulding Quantity Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.6,\r\n                                        title: { text: \"Months\" }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Year</th>\r\n                            <th >Month</th>\r\n                            <th >Quantity</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Year}</th>\r\n                                    <th>{p.MonthName}</th>\r\n                                    <th>{p.Quantity}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MonthwiseMouldingQty;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ItemwiseMouldingQty extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            Itcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseMouldingQuantitySummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseMouldingQuantitySummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ItemWiseMouldingQuantitySummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Itemwise Moulding Quantity Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Quantity</th>\r\n\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemwiseMouldingQty;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ContractorwiseMouldingQty extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            Contractorcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Contractorcode = (e) => {\r\n        this.setState({\r\n            Contractorcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Contractorcode: this.state.Contractorcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ContractorWiseMouldingQuantitySummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Contractorcode: this.state.Contractorcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ContractorWiseMouldingQuantitySummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ContractorWiseMouldingQuantitySummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Contractorcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Contractorwise Moulding Quantity Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Contractorcode}\r\n                                onChange={this.Contractorcode}\r\n                                placeholder=\"Contractor Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Contractorcode</th>\r\n                            <th>Contractorname</th>\r\n                            <th>Quantity</th>\r\n\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Contractorcode}</th>\r\n                                    <th>{p.Contractorname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContractorwiseMouldingQty;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class MonthwisePouringQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n    getEmployeeList() {\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWisePouringQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWisePouringQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthWisePouringQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt=[];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Monthwise Pouring Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Year</th>\r\n                            <th >Month</th>\r\n                            <th >Quantity</th>\r\n                            <th >Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Year}</th>\r\n                                    <th>{p.MonthName}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MonthwisePouringQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ItemwisePouringingQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Itcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWisePouringQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWisePouringQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ItemWisePouringQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Itemwise Pouring Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Quantity</th>\r\n                            <th>Weight</th>\r\n\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemwisePouringingQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ContractorwisePouringQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Contractorcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Contractorcode = (e) => {\r\n        this.setState({\r\n            Contractorcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Contractorcode: this.state.Contractorcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ContractorWisePouringQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Contractorcode: this.state.Contractorcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ContractorWisePouringQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ContractorWisePouringQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Contractorcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Contractorwise Pouring Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Contractorcode}\r\n                                onChange={this.Contractorcode}\r\n                                placeholder=\"Contractor Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Contractorcode</th>\r\n                            <th>Contractorname</th>\r\n                            <th>Quantity</th>\r\n                            <th>Weight</th>\r\n\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Contractorcode}</th>\r\n                                    <th>{p.Contractorname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContractorwisePouringQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class MonthwiseConsumptionQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n    getEmployeeList() {\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseConsumptionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseConsumptionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthWiseConsumptionQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Monthwise Consumption Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Year</th>\r\n                            <th >Month</th>\r\n                            <th >Quantity</th>\r\n                            <th >Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Year}</th>\r\n                                    <th>{p.MonthName}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MonthwiseConsumptionQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ItemwiseConsumptionQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Itcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseConsumptionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseConsumptionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ItemWiseConsumptionQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Itemwise Consumption Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Quantity</th>\r\n                            <th>Weight</th>\r\n\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemwiseConsumptionQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ContractorwiseConsumptionQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Contractorcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Contractorcode = (e) => {\r\n        this.setState({\r\n            Contractorcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Contractorcode: this.state.Contractorcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ContractorWiseConsumptionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Contractorcode: this.state.Contractorcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ContractorWiseConsumptionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ContractorWiseConsumptionQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Contractorcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Contractorwise Pouring Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Contractorcode}\r\n                                onChange={this.Contractorcode}\r\n                                placeholder=\"Contractor Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Contractorcode</th>\r\n                            <th>Contractorname</th>\r\n                            <th>Quantity</th>\r\n                            <th>Weight</th>\r\n\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Contractorcode}</th>\r\n                                    <th>{p.Contractorname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContractorwiseConsumptionQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class MonthwiseProductionQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n    getEmployeeList() {\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseProductionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseProductionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthWiseProductionQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Monthwise Production Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Year</th>\r\n                            <th >Month</th>\r\n                            <th >Quantity</th>\r\n                            <th >Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Year}</th>\r\n                                    <th>{p.MonthName}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MonthwiseProductionQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ItemwiseProductionQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Itcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseProductionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseProductionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ItemWiseProductionQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Itemwise Production Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Quantity</th>\r\n                            <th>Weight</th>\r\n\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemwiseProductionQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ContractorwiseProductionQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Contractorcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Contractorcode = (e) => {\r\n        this.setState({\r\n            Contractorcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Contractorcode: this.state.Contractorcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ContractorWiseProductionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Contractorcode: this.state.Contractorcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ContractorWiseProductionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ContractorWiseProductionQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Contractorcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Contractorwise Production Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Contractorcode}\r\n                                onChange={this.Contractorcode}\r\n                                placeholder=\"Contractor Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Contractorcode</th>\r\n                            <th>Contractorname</th>\r\n                            <th>Quantity</th>\r\n                            <th>Weight</th>\r\n\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Contractorcode}</th>\r\n                                    <th>{p.Contractorname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContractorwiseProductionQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class MonthwiseFirstRejectionQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n    getEmployeeList() {\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseFirstRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseFirstRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthWiseFirstRejectionQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Monthwise First Rejection Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Year</th>\r\n                            <th >Month</th>\r\n                            <th >Quantity</th>\r\n                            <th >Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Year}</th>\r\n                                    <th>{p.MonthName}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MonthwiseFirstRejectionQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ItemwiseFirstRejectionQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Itcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseFirstRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseFirstRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ItemWiseFirstRejectionQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Itemwise First Rejection Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Quantity</th>\r\n                            <th>Weight</th>\r\n\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemwiseFirstRejectionQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ContractorwiseFirstRejectionQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Contractorcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Contractorcode = (e) => {\r\n        this.setState({\r\n            Contractorcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Contractorcode: this.state.Contractorcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ContractorWiseFirstRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Contractorcode: this.state.Contractorcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ContractorWiseFirstRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ContractorWiseFirstRejectionQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Contractorcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Contractorwise First Rejection Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Contractorcode}\r\n                                onChange={this.Contractorcode}\r\n                                placeholder=\"Contractor Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Contractorcode</th>\r\n                            <th>Contractorname</th>\r\n                            <th>Quantity</th>\r\n                            <th>Weight</th>\r\n\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Contractorcode}</th>\r\n                                    <th>{p.Contractorname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContractorwiseFirstRejectionQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class MonthwiseIINDRejectionQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n    getEmployeeList() {\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseIINDRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWiseIINDRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthWiseIINDRejectionQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Monthwise IIND Rejection Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Year</th>\r\n                            <th >Month</th>\r\n                            <th >Quantity</th>\r\n                            <th >Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Year}</th>\r\n                                    <th>{p.MonthName}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MonthwiseIINDRejectionQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ItemwiseIINDRejectionQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Itcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseIINDRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseIINDRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ItemWiseIINDRejectionQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Itemwise IIND Rejection Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Quantity</th>\r\n                            <th>Weight</th>\r\n\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemwiseIINDRejectionQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar, Pie, Doughnut } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class PartywiseIINDRejQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            accode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PartyWiseIINDRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { accode: this.state.accode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PartyWiseIINDRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/PartyWiseIINDRejectionQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.PartyCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\"\r\n\r\n\r\n\r\n\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Partywise IIND Rejection Quantity/Weight Summary </h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n                <form>\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-12 form-group\">\r\n                            <Bar data={this.state.Data}\r\n                                width={600} height={300}\r\n\r\n\r\n                                options={{\r\n\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                    barThickness: 1,\r\n\r\n                                    scales: {\r\n                                        xAxes: [\r\n                                            {\r\n                                                barThickness: 40,\r\n                                                barPercentage: 0.5,\r\n                                                categoryPercentage: 0,\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                }}\r\n\r\n                            />\r\n                            {/*  <Doughnut \r\n                        data={this.state.Data}\r\n                        width={600} height={300}\r\n                        options={{ maintainAspectRatio: false }} /> */}\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </form>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>PartyCode</th>\r\n                            <th>PartyName</th>\r\n                            <th >Quantity</th>\r\n                            <th >Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Partycode}</th>\r\n                                    <th>{p.Partyname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PartywiseIINDRejQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class MonthwisePartyRejectionQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n    getEmployeeList() {\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWisePartyRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWisePartyRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthWisePartyRejectionQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Monthwise Party Rejection Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Year</th>\r\n                            <th >Month</th>\r\n                            <th >Quantity</th>\r\n                            <th >Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Year}</th>\r\n                                    <th>{p.MonthName}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MonthwisePartyRejectionQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ItemwisePartyRejectionQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Itcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWisePartyRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWisePartyRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ItemWisePartyRejectionQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Itemwise Party Rejection Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Quantity</th>\r\n                            <th>Weight</th>\r\n\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemwisePartyRejectionQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar, Pie, Doughnut } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class PartywisePartyRejQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            accode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PartyWisePartyRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { accode: this.state.accode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PartyWisePartyRejectionQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/PartyWisePartyRejectionQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.PartyCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\"\r\n\r\n\r\n\r\n\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Partywise Party Rejection Quantity/Weight Summary </h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n                <form>\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-12 form-group\">\r\n                            <Bar data={this.state.Data}\r\n                                width={600} height={300}\r\n\r\n\r\n                                options={{\r\n\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                    barThickness: 1,\r\n\r\n                                    scales: {\r\n                                        xAxes: [\r\n                                            {\r\n                                                barThickness: 40,\r\n                                                barPercentage: 0.5,\r\n                                                categoryPercentage: 0,\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                }}\r\n\r\n                            />\r\n                            {/*  <Doughnut \r\n                        data={this.state.Data}\r\n                        width={600} height={300}\r\n                        options={{ maintainAspectRatio: false }} /> */}\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </form>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>PartyCode</th>\r\n                            <th>PartyName</th>\r\n                            <th >Quantity</th>\r\n                            <th >Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Partycode}</th>\r\n                                    <th>{p.Partyname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PartywisePartyRejQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class MonthwisePartyRejectionAnalysisQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n    getEmployeeList() {\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWisePartyRejectionAnalysisQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/MonthWisePartyRejectionAnalysisQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/MonthWisePartyRejectionAnalysisQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.MonthName);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Monthwise Party Rejection Analysis Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Year</th>\r\n                            <th >Month</th>\r\n                            <th >Quantity</th>\r\n                            <th >Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Year}</th>\r\n                                    <th>{p.MonthName}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MonthwisePartyRejectionAnalysisQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ItemwisePartyRejectionAnalysisQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Itcode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWisePartyRejectionAnalysisQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWisePartyRejectionAnalysisQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ItemWisePartyRejectionAnalysisQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            },\r\n                            {\r\n                                label: 'Weight Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Itemwise Party Rejection Analysis Quantity/Weight Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Quantity</th>\r\n                            <th>Weight</th>\r\n\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemwisePartyRejectionAnalysisQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar, Pie, Doughnut } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class PartywisePartyRejAnalysisQtyWgt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            accode: '',\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PartyWisePartyRejectionAnalysisQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { accode: this.state.accode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PartyWisePartyRejectionAnalysisQtyWgtSummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/PartyWisePartyRejectionAnalysisQtyWgtSummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Quantity);\r\n                    wgt.push(record.Wgt);\r\n                    achead.push(record.PartyCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Quantity Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\"\r\n\r\n\r\n\r\n\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Partywise Party Rejection Analysis Quantity/Weight Summary </h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n                <form>\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-12 form-group\">\r\n                            <Bar data={this.state.Data}\r\n                                width={600} height={300}\r\n\r\n\r\n                                options={{\r\n\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                    barThickness: 1,\r\n\r\n                                    scales: {\r\n                                        xAxes: [\r\n                                            {\r\n                                                barThickness: 40,\r\n                                                barPercentage: 0.5,\r\n                                                categoryPercentage: 0,\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                }}\r\n\r\n                            />\r\n                            {/*  <Doughnut \r\n                        data={this.state.Data}\r\n                        width={600} height={300}\r\n                        options={{ maintainAspectRatio: false }} /> */}\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </form>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>PartyCode</th>\r\n                            <th>PartyName</th>\r\n                            <th >Quantity</th>\r\n                            <th >Weight</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Partycode}</th>\r\n                                    <th>{p.Partyname}</th>\r\n                                    <th>{p.Quantity}</th>\r\n                                    <th>{p.Wgt}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PartywisePartyRejAnalysisQtyWgt;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ItemwiseMouldingPouring extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            Itcode: '',\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode, startdate: this.state.startdate, enddate: this.state.enddate };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseMouldingVsPouringQuantitySummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode, startdate: this.state.startdate, enddate: this.state.enddate  };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/ItemWiseMouldingVsPouringQuantitySummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/ItemWiseMouldingVsPouringQuantitySummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.MOULDQTY);\r\n                    wgt.push(record.POURQTY);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Moulding Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }, {\r\n                                label: 'Pouring Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Itemwise Moulding VS Pouring Quantity Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Moulding Quantity</th>\r\n                            <th>Pouring Quantity</th>\r\n                            <th>Balance</th>\r\n                           \r\n\r\n\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.MOULDQTY}</th>\r\n                                    <th>{p.POURQTY}</th>\r\n                                    <th>{p.Balance}</th>\r\n                                    \r\n                                    \r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n               \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemwiseMouldingPouring;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class ItemwiseProductionRejecction extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            Data1: [],\r\n            Itcode: '',\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    Itcode = (e) => {\r\n        this.setState({\r\n            Itcode: e.target.value\r\n        });\r\n    };\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { Itcode: this.state.Itcode, startdate: this.state.startdate, enddate: this.state.enddate  };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://localhost:44345/Api/Misrct_new1/ItemWiseProductionVsRejectionQuantitySummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { Itcode: this.state.Itcode, startdate: this.state.startdate, enddate: this.state.enddate  };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://localhost:44345/Api/Misrct_new1/ItemWiseProductionVsRejectionQuantitySummary', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://localhost:44345/Api/Misrct_new1/ItemWiseProductionVsRejectionQuantitySummary`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let wgt = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.MOULDQTY);\r\n                    wgt.push(record.POURQTY);\r\n                    achead.push(record.Itemcode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Moulding Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#00FFFF\",\r\n\r\n\r\n\r\n                                ]\r\n\r\n                            }, {\r\n                                label: 'Pouring Summary',\r\n                                data: wgt,\r\n                                backgroundColor: [\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n                                    \"#FF00FF\",\r\n\r\n\r\n                                ]\r\n\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Itemwise Production VS Rejection Quantity Summary</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.Itcode}\r\n                                onChange={this.Itcode}\r\n                                placeholder=\"Item Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barThickness: 40,\r\n                                        barPercentage: 0.5,\r\n                                        categoryPercentage: 0,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Itemcode</th>\r\n                            <th>Itemname</th>\r\n                            <th>Production Quantity</th>\r\n                            <th>Rejection Quantity</th>\r\n\r\n\r\n\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Itemcode}</th>\r\n                                    <th>{p.Itemname}</th>\r\n                                    <th>{p.MOULDQTY}</th>\r\n                                    <th>{p.POURQTY}</th>\r\n                                    \r\n\r\n\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemwiseProductionRejecction;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class Tradingexpenses extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            accode: '',\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate , accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/TradingExpenses', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate , accode: this.state.accode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/TradingExpenses', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/TradingExpenses`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.PartyCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Ledger Balances-Trading Expenses</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.2,\r\n                                        title: { text: \"Months\" }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>PartyCode</th>\r\n                            <th>PartyName</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.PartyCode}</th>\r\n                                    <th>{p.PartyName}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tradingexpenses;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class Tradingincomes extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            accode: '',\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/TradingIncomes', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/TradingIncomes', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/TradingIncomes`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.PartyCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Ledger Balances-Trading Income</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.2,\r\n                                        title: { text: \"Months\" }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>PartyCode</th>\r\n                            <th>PartyName</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.PartyCode}</th>\r\n                                    <th>{p.PartyName}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tradingincomes;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class PLexpenses extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            accode: '',\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PLExpenses', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PLExpenses', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/PLExpenses`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.PartyCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Ledger Balances-P&L Expenses</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.2,\r\n                                        title: { text: \"Months\" }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>PartyCode</th>\r\n                            <th>PartyName</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.PartyCode}</th>\r\n                                    <th>{p.PartyName}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PLexpenses;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar} from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class PLincomes extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            accode: '',\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PLIncomes', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/PLIncomes', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/PLIncomes`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.PartyCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Ledger Balances-P&L Income</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.2,\r\n                                        scaleBeginAtZero:false,\r\n\r\n                                    }\r\n                                ],\r\n                                yAxes: [\r\n                                    {\r\n                                        barPercentage: 0.2,\r\n                                        scaleBeginAtZero: false,\r\n                                        \r\n                                        ticks:{\r\n                                        // scaleStartValue:-1\r\n                                        }\r\n\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>PartyCode</th>\r\n                            <th>PartyName</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.PartyCode}</th>\r\n                                    <th>{p.PartyName}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PLincomes;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class DebList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            accode: '',\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/DebtorsList', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/DebtorsList', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/DebtorsList`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.PartyCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Debtors List</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.2,\r\n                                        title: { text: \"Months\" }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>PartyCode</th>\r\n                            <th>PartyName</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.PartyCode}</th>\r\n                                    <th>{p.PartyName}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DebList;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class CreList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            accode: '',\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/CreditorsList', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/CreditorsList', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/CreditorsList`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.PartyCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Creditors List</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.2,\r\n                                        title: { text: \"Months\" }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>PartyCode</th>\r\n                            <th>PartyName</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.PartyCode}</th>\r\n                                    <th>{p.PartyName}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreList;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class FixAssets extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            accode: '',\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/FixedAssets', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/FixedAssets', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/FixedAssets`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.PartyCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Fixed Assets</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.2,\r\n                                        title: { text: \"Months\" }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>PartyCode</th>\r\n                            <th>PartyName</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.PartyCode}</th>\r\n                                    <th>{p.PartyName}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FixAssets;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class CurAssets extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n            accode: '',\r\n            startdate: new Date('01-04-2020'),\r\n            enddate: new Date(),\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    Changedate = (e) => {\r\n        this.setState({\r\n            startdate: e\r\n        });\r\n    };\r\n    enddate = (e) => {\r\n        this.setState({\r\n            enddate: e\r\n        });\r\n    };\r\n    accode = (e) => {\r\n        this.setState({\r\n            accode: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/CurrentAssets', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    onsubmit = (e) => {\r\n        //debugger;\r\n\r\n        const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n\r\n\r\n\r\n        e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/CurrentAssets', data).then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/CurrentAssets`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Amount);\r\n                    achead.push(record.PartyCode);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Amount Summary',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Current Assets</h3>\r\n                <br></br>\r\n                <form >\r\n                    <div className=\"row hdr\" >\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.startdate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.Changedate}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <DatePicker className=\"form-control\"\r\n                                selected={this.state.enddate} placeholderText=\"Select Date\" showPopperArrow={false}\r\n                                onChange={this.enddate}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <input type=\"text\" selected={this.state.accode}\r\n                                onChange={this.accode}\r\n                                placeholder=\"Party Code\"\r\n                            ></input>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"col-sm-2 form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-success\" onClick={this.onsubmit}>Search</button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.2,\r\n                                        title: { text: \"Months\" }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <Table class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>PartyCode</th>\r\n                            <th>PartyName</th>\r\n                            <th >Amount</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.PartyCode}</th>\r\n                                    <th>{p.PartyName}</th>\r\n                                    <th>{p.Amount}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CurAssets;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class Entriestran extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n           \r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    \r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        //const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n\r\n\r\n\r\n         //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/Transaction').then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        }); \r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/Transaction`)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Count);\r\n                    achead.push(record.Flag);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Flag Count',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Entries - Transaction</h3>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.2,\r\n                                       \r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <table align=\"center\" width=\"500\" border=\"3\" class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Flag</th>\r\n                            <th>Count</th>\r\n                           \r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Flag}</th>\r\n                                    <th>{p.Count}</th>\r\n                                    \r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Entriestran;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class InventoryBillSub extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    getEmployeeList() {\r\n\r\n        //const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n\r\n\r\n\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/InventoryBillSub').then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/InventoryBillSub`)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Count);\r\n                    achead.push(record.Flag);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Flag Count',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Entries - Inventory BillSub</h3>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.2,\r\n\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <table align=\"center\" width=\"500\" border=\"3\" class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Flag</th>\r\n                            <th>Count</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Flag}</th>\r\n                                    <th>{p.Count}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InventoryBillSub;","import React, { Component } from 'react'\r\nimport { Table, Form, Button } from \"react-bootstrap\";\r\nimport { Input } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Table.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Checkbox } from 'material-ui';\r\n\r\n\r\nexport class InventoryGRN extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            employeedata: [],\r\n            Data: [],\r\n        }\r\n    }\r\n    getEmployeeList() {\r\n\r\n        //const data = { startdate: this.state.startdate, enddate: this.state.enddate, accode: this.state.accode };\r\n        //e.preventDefault();\r\n        axios.post('https://webapi.local/Api/Misrct_new1/InventoryGRN').then(response => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                employeedata: response.data\r\n            });\r\n        });\r\n\r\n        axios.post(`https://webapi.local/Api/Misrct_new1/InventoryGRN`)\r\n            .then(response => {\r\n                console.log(response);\r\n                const por = response.data;\r\n                let qty = [];\r\n                let achead = [];\r\n                por.forEach(record => {\r\n                    qty.push(record.Count);\r\n                    achead.push(record.Flag);\r\n                });\r\n                this.setState({\r\n                    Data: {\r\n                        labels: achead,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Flag Count',\r\n                                data: qty,\r\n                                backgroundColor: [\r\n\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\",\r\n                                    \"#3cb371\",\r\n                                    \"#0000FF\",\r\n                                    \"#9966FF\",\r\n                                    \"#4C4CFF\",\r\n                                    \"#00FFFF\",\r\n                                    \"#f990a7\",\r\n                                    \"#aad2ed\",\r\n                                    \"#FF00FF\",\r\n                                    \"Blue\",\r\n                                    \"Red\"\r\n\r\n\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployeeList();\r\n    }\r\n    render() {\r\n        const { employeedata } = this.state;\r\n        return (\r\n            <div className=\"body\">\r\n                <h3 className=\"m-3 d-flex justify-content-center\">Entries - Inventory GRN</h3>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <Bar data={this.state.Data}\r\n                        width={600} height={300}\r\n\r\n\r\n                        options={{\r\n\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            barThickness: 1,\r\n\r\n                            scales: {\r\n                                xAxes: [\r\n                                    {\r\n                                        barPercentage: 0.1,\r\n\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }}\r\n\r\n                    />\r\n                </div><br></br><br></br>\r\n\r\n\r\n                <table align=\"center\" width=\"500\" border=\"3\" class=\"center\" stiped bordered hover size=\"sm\">\r\n                    <thead >\r\n                        <tr className=\"align1\">\r\n                            <th>Flag</th>\r\n                            <th>Count</th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employeedata.map((p, index) => {\r\n                                return <tr key={index}>\r\n                                    <th>{p.Flag}</th>\r\n                                    <th>{p.Count}</th>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InventoryGRN;","import React, { Component } from 'react';\r\n\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport { Link, Route, BrowserRouter as Router, Switch, BrowserRouter, useHistory} from 'react-router-dom';\r\nimport { Employee } from './Components/Employee';\r\n\r\n\r\nimport { MPOAS } from './Components/MonthwisePurOrdAmtSummary';\r\nimport { MPOQS } from './Components/MonthwisePurOrdQtySummary';\r\nimport { Partywise } from './Components/PartywisePurOrdAmtSummary';\r\nimport { Itemwise } from './Components/ItemwisePurOrdQtySummary';\r\nimport { ItemwiseBillsub } from './Components/ItemwisePurQtyWgtAmtBillsub';\r\nimport { MPAB } from './Components/MonthwisePurAmtBillsub';\r\nimport { PartywiseBillsub } from './Components/PartywisePurAmtBillsub';\r\n\r\n\r\nimport { MSAB } from './SalesComponent/MonthwiseSalesAmt';\r\nimport { MSAQWB } from './SalesComponent/MonthwiseSalesAmtQtyWgt';\r\nimport { PartywiseSalesBillentry } from \"./SalesComponent/PartywiseSalesAmt\";\r\nimport { PartywiseSalesQtyBillentry } from \"./SalesComponent/PartywiseSalesQtyWeight\";\r\nimport { ItemwiseSalesQtyWgt } from \"./SalesComponent/ItemwiseSalesQtyWgt\";\r\nimport { DailyItemwiseSalesQtyWgt } from \"./SalesComponent/DailySalesDispatchItemwise\";\r\nimport { MRAWB } from './SalesComponent/MonthlyRateAmtWgt';\r\n\r\n\r\nimport { MGIAS } from './MaterialManComponent/MonthwiseGoodsInwardAmtSummary';\r\nimport { MGIQWS } from './MaterialManComponent/MonthwiseGoodsInwardQtyWgtSummary';\r\nimport { PartywiseGIAS } from './MaterialManComponent/PartywiseGoodsInwardAmtSummary';\r\nimport { ItemwiseGIQWS } from './MaterialManComponent/ItemwiseGoodsInwardQtyWgtSummary';\r\nimport { ItemwiseIssueQWS } from './MaterialManComponent/ItemwiseIssueQtyWgtSummary';\r\nimport { Processingissue } from './MaterialManComponent/ProcessingIssue';\r\nimport Processingreceived from './MaterialManComponent/ProcessingReeived';\r\nimport ItemwiseStock from './MaterialManComponent/ItemwiseStock';\r\n\r\n\r\n\r\nimport MonthwiseMouldingQty from './ProductionComponent/MonthwiseMouldingQtySummary';\r\nimport { DropDownMenu } from 'material-ui';\r\nimport ItemwiseMouldingQty from './ProductionComponent/ItemwiseMouldingQtySummary';\r\nimport ContractorwiseMouldingQty from './ProductionComponent/ContractorwiseMouldingQtySummary';\r\nimport MonthwisePouringQtyWgt from './ProductionComponent/MonthwisePouringQtyWgtSummary';\r\nimport ItemwisePouringingQtyWgt from './ProductionComponent/ItemwisePouringQtyWgtSummary';\r\nimport ContractorwisePouringQtyWgt from './ProductionComponent/ContractorWisePouringQtyWgtSummary';\r\nimport MonthwiseConsumptionQtyWgt from './ProductionComponent/MonthwiseConsumptionQtyWgtSummary';\r\nimport ItemwiseConsumptionQtyWgt from './ProductionComponent/ItemwiseConsumptionQtyWgtSummary';\r\nimport ContractorwiseConsumptionQtyWgt from './ProductionComponent/ContractorwiseConsumptionQtyWgtSummary';\r\nimport MonthwiseProductionQtyWgt from './ProductionComponent/MonthwiseProductionQtyWgtSummary';\r\nimport ItemwiseProductionQtyWgt from './ProductionComponent/ItemwiseProductionQtyWgtSummary';\r\nimport ContractorwiseProductionQtyWgt from './ProductionComponent/ContractorwiseProductionQtyWgtSummary';\r\nimport MonthwiseFirstRejectionQtyWgt from './ProductionComponent/MonthwiseFirstRejectionQtyWgtSummary';\r\nimport ItemwiseFirstRejectionQtyWgt from './ProductionComponent/ItemwiseFirstRejectionQtyWgtSummary';\r\nimport ContractorwiseFirstRejectionQtyWgt from './ProductionComponent/ContractorwiseFirstRejectionQtyWgtSummary';\r\nimport MonthwiseIINDRejectionQtyWgt from './ProductionComponent/MonthwiseIINDRejQtyWgtSummary';\r\nimport ItemwiseIINDRejectionQtyWgt from './ProductionComponent/ItemwiseIINDRejQtyWgtSummary';\r\nimport PartywiseIINDRejQtyWgt from './ProductionComponent/PartywiseIINDRejQtyWgtSummary';\r\nimport MonthwisePartyRejectionQtyWgt from './ProductionComponent/MonthwisePartyRejQtyWgt';\r\nimport ItemwisePartyRejectionQtyWgt from './ProductionComponent/ItemwisePartyRejQtyWgtSummary';\r\nimport PartywisePartyRejQtyWgt from './ProductionComponent/PartywisePartyRejQtyWgtSummary';\r\nimport MonthwisePartyRejectionAnalysisQtyWgt from './ProductionComponent/MonthwisePartyRejAnalysisQtyWgtSummary';\r\nimport ItemwisePartyRejectionAnalysisQtyWgt from './ProductionComponent/ItemwisePartyRejAnalysisQtyWgtSummary';\r\nimport PartywisePartyRejAnalysisQtyWgt from './ProductionComponent/PartywisePartyRejAnalysisQtyWgtSummary';\r\nimport ItemwiseMouldingPouring from './ProductionComponent/ItemwiseMouldVsPour';\r\nimport ItemwiseProductionRejecction from './ProductionComponent/ItemwiseProdVsRej';\r\n\r\n\r\nimport Tradingexpenses from './AccountsComponent/TradingExpenses';\r\nimport Tradingincomes from './AccountsComponent/TradingIncomes';\r\nimport PLexpenses from './AccountsComponent/PLExpenses';\r\nimport PLincomes from './AccountsComponent/PLIncomes';\r\nimport DebList from './AccountsComponent/DebtorsList';\r\nimport CreList from './AccountsComponent/CreditorsList';\r\nimport FixAssets from './AccountsComponent/FixedAssets';\r\nimport CurAssets from './AccountsComponent/CurrentAssets';\r\nimport Entriestran from './AccountsComponent/EntriesTransactions';\r\nimport InventoryBillSub from './AccountsComponent/InventoryBillSub';\r\nimport InventoryGRN from './AccountsComponent/InventoryGRN';\r\n\r\n\r\n\r\n\r\nexport class NavMenu extends Component {\r\n    \r\n    \r\n//console.warn(user)\r\n\r\n logout() {\r\n    \r\n    localStorage.clear();\r\n    var a = localStorage.getItem('myData');\r\n    console.warn(a)\r\n     window.location.href = '/';\r\n    //  this.props.history.push('/login')\r\n\r\n}\r\n    static displayName = NavMenu.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.toggle1 = this.toggle1.bind(this);\r\n        this.toggle2 = this.toggle2.bind(this);\r\n        this.toggle3 = this.toggle3.bind(this);\r\n        this.toggle4 = this.toggle4.bind(this);\r\n        //Production sub menus\r\n        this.toggle5 = this.toggle5.bind(this);\r\n        this.toggle6 = this.toggle6.bind(this);\r\n        this.toggle7 = this.toggle7.bind(this);\r\n        this.toggle8 = this.toggle8.bind(this);\r\n        this.toggle9 = this.toggle9.bind(this);\r\n        this.toggle10 = this.toggle10.bind(this);\r\n        this.toggle11= this.toggle11.bind(this);\r\n        this.toggle12 = this.toggle12.bind(this);\r\n        this.state = {\r\n            collapsed: true\r\n        };\r\n    }\r\n    \r\n\r\n    toggleNavbar() {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        });\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n\r\n    toggle1() {\r\n        this.setState({\r\n            dropdownOpen1: !this.state.dropdownOpen1\r\n        });\r\n    }\r\n\r\n    toggle2() {\r\n        this.setState({\r\n            dropdownOpen2: !this.state.dropdownOpen2\r\n        });\r\n    }\r\n\r\n    toggle3() {\r\n        this.setState({\r\n            dropdownOpen3: !this.state.dropdownOpen3\r\n        });\r\n    }\r\n\r\n    toggle4() {\r\n        this.setState({\r\n            dropdownOpen4: !this.state.dropdownOpen4\r\n        });\r\n    }\r\n    //Production sub menus\r\n    toggle5() {\r\n        this.setState({\r\n            dropdownOpen5: !this.state.dropdownOpen5\r\n        });\r\n    }\r\n    toggle6() {\r\n        this.setState({\r\n            dropdownOpen6: !this.state.dropdownOpen6\r\n        });\r\n    }\r\n    toggle7() {\r\n        this.setState({\r\n            dropdownOpen7: !this.state.dropdownOpen7\r\n        });\r\n    }\r\n    toggle8() {\r\n        this.setState({\r\n            dropdownOpen8: !this.state.dropdownOpen8\r\n        });\r\n    }\r\n    toggle9() {\r\n        this.setState({\r\n            dropdownOpen9: !this.state.dropdownOpen9\r\n        });\r\n    }\r\n    toggle10() {\r\n        this.setState({\r\n            dropdownOpen10: !this.state.dropdownOpen10\r\n        });\r\n    }\r\n    toggle11() {\r\n        this.setState({\r\n            dropdownOpen11: !this.state.dropdownOpen11\r\n        });\r\n    }\r\n    toggle12() {\r\n        this.setState({\r\n            dropdownOpen12: !this.state.dropdownOpen12\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <Router>\r\n            <header>\r\n                <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n                    <Container>\r\n                        <NavbarBrand tag={Link} to=\"/\">Ridhi Casting Pvt Ltd.</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n                        <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n                            <ul className=\"navbar-nav flex-grow\">\r\n                                <NavItem>\r\n                                    <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n                                        <DropdownToggle nav caret>\r\n                                            <span className=\"mr-2\">Purchase</span>\r\n                                        </DropdownToggle>\r\n                                        <DropdownMenu>\r\n                                                <DropdownItem tag={Link}  to=\"/fetch-purOrdEntry\" >Purchase Order Entry</DropdownItem>\r\n                                                <DropdownItem tag={Link} to=\"/fetch-MonPurOrdAmtSum\" >Monthwise Purchase Order - Amount Summary</DropdownItem>\r\n                                                <DropdownItem tag={Link} to=\"/fetch-MonPurOrdQtySum\" >Monthwise Purchase Order - Quantity/Weight Summary</DropdownItem>\r\n                                                <DropdownItem tag={Link} to=\"/fetch-PartyPurOrdAmtSum\" >PartyWise Purchase Order - Amount Summary</DropdownItem>\r\n                                                <DropdownItem tag={Link} to=\"/fetch-ItemPurOrdQtySum\" >Itemwise Purchase Order - Quantity/Weight Summary</DropdownItem>\r\n                                                <DropdownItem tag={Link} to=\"/fetch-MonPurAmtBill\" >Monthwise Purchase Amount</DropdownItem>\r\n                                                <DropdownItem tag={Link} to=\"/fetch-PartyPurAmtBill\" >Partywise Purchase Amount</DropdownItem>\r\n                                                <DropdownItem tag={Link} to=\"/fetch-ItemwiseBillsub\" >Itemwise Purchase Quantity/Weight/Amount</DropdownItem>\r\n\r\n\r\n\r\n                                        </DropdownMenu>\r\n                                    </Dropdown>\r\n                                </NavItem>\r\n\r\n                                <NavItem>\r\n                                    <Dropdown isOpen={this.state.dropdownOpen1} toggle={this.toggle1}>\r\n                                        <DropdownToggle nav caret>\r\n                                            <span className=\"mr-2\">Manufacturing and Processes</span>\r\n                                        </DropdownToggle>\r\n                                            <DropdownMenu>\r\n                                               \r\n                                                <Dropdown isOpen={this.state.dropdownOpen5} toggle={this.toggle5} direction='right'>\r\n                                                    <DropdownToggle nav caret>\r\n                                                        <span className=\"mr-2\">Moulding</span>\r\n                                                    </DropdownToggle>\r\n                                                    <DropdownMenu>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-MonMouldQty\" >Monthwise Moulding Quantity Summary</DropdownItem>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-ItemwiseMouldQty\" >Itemwise Moulding Quantity Summary</DropdownItem>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-ContracorwiseMouldQty\" >Contractorwise Moulding Quantity Summary</DropdownItem>\r\n                                                    </DropdownMenu>\r\n                                                </Dropdown>\r\n\r\n                                                <Dropdown isOpen={this.state.dropdownOpen6} toggle={this.toggle6} direction='right'>\r\n                                                    <DropdownToggle nav caret>\r\n                                                        <span className=\"mr-2\">Pouring</span>\r\n                                                    </DropdownToggle>\r\n                                                    <DropdownMenu>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-MonPourQtyWgt\" >Monthwise Pouring Quantity/Weight Summary</DropdownItem>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-ItemwisePourQtyWgt\" >Itemwise Moulding Quantity/Weight Summary</DropdownItem>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-ContracorwisePourQtyWgt\" >Contractorwise Moulding Quantity/Weight Summary</DropdownItem>\r\n                                                    </DropdownMenu>\r\n                                                </Dropdown>\r\n\r\n                                                <Dropdown isOpen={this.state.dropdownOpen7} toggle={this.toggle7} direction='right'>\r\n                                                    <DropdownToggle nav caret>\r\n                                                        <span className=\"mr-2\">Consumption</span>\r\n                                                    </DropdownToggle>\r\n                                                    <DropdownMenu>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-MonConQtyWgt\" >Monthwise Consumption Quantity/Weight Summary</DropdownItem>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-ItemwiseConQtyWgt\" >Itemwise Consumption Quantity/Weight Summary</DropdownItem>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-ContracorwiseConQtyWgt\" >Contractorwise Consumption Quantity/Weight Summary</DropdownItem>\r\n                                                    </DropdownMenu>\r\n                                                </Dropdown>\r\n\r\n                                                <Dropdown isOpen={this.state.dropdownOpen8} toggle={this.toggle8} direction='right'>\r\n                                                    <DropdownToggle nav caret>\r\n                                                        <span className=\"mr-2\">Production</span>\r\n                                                    </DropdownToggle>\r\n                                                    <DropdownMenu>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-MonProdQtyWgt\" >Monthwise Production Quantity/Weight Summary</DropdownItem>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-ItemwiseProdQtyWgt\" >Itemwise Production Quantity/Weight Summary</DropdownItem>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-ContracorwiseProdQtyWgt\" >Contractorwise Production Quantity/Weight Summary</DropdownItem>\r\n                                                    </DropdownMenu>\r\n                                                </Dropdown>\r\n\r\n                                                <Dropdown isOpen={this.state.dropdownOpen9} toggle={this.toggle9} direction='right'>\r\n                                                    <DropdownToggle nav caret>\r\n                                                        <span className=\"mr-2\">Rejection</span>\r\n                                                    </DropdownToggle>\r\n                                                    <DropdownMenu>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-MonFREJQtyWgt\" >Monthwise First Rejection Quantity/Weight Summary</DropdownItem>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-ItemwiseFREJQtyWgt\" >Itemwise First Rejection Quantity/Weight Summary</DropdownItem>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-ContracorwiseFREJQtyWgt\" >Contractorwise First Rejection Quantity/Weight Summary</DropdownItem>\r\n                                                    </DropdownMenu>\r\n                                                </Dropdown>\r\n\r\n                                                <Dropdown isOpen={this.state.dropdownOpen10} toggle={this.toggle10} direction='right'>\r\n                                                    <DropdownToggle nav caret>\r\n                                                        <span className=\"mr-2\">IIND Rejection</span>\r\n                                                    </DropdownToggle>\r\n                                                    <DropdownMenu>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-MonIINDRejQtyWgt\" >Monthwise IIND Rejection Quantity/Weight Summary</DropdownItem>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-ItemwiseIINDRejQtyWgt\" >Itemwise IIND Rejection Quantity/Weight Summary</DropdownItem>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-PartywiseIINDRejQtyWgt\" >Partywise IIND Rejection Quantity/Weight Summary</DropdownItem>\r\n                                                    </DropdownMenu>\r\n                                                </Dropdown>\r\n\r\n                                                <Dropdown isOpen={this.state.dropdownOpen11} toggle={this.toggle11} direction='right'>\r\n                                                    <DropdownToggle nav caret>\r\n                                                        <span className=\"mr-2\">Party Rejection</span>\r\n                                                    </DropdownToggle>\r\n                                                    <DropdownMenu>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-MonPartyRejQtyWgt\" >Monthwise Party Rejection Quantity/Weight Summary</DropdownItem>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-ItemwisePartyRejQtyWgt\" >Itemwise Party Rejection Quantity/Weight Summary</DropdownItem>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-PartywisePartyRejQtyWgt\" >Partywise Party Rejection Quantity/Weight Summary</DropdownItem>\r\n                                                    </DropdownMenu>\r\n                                                </Dropdown>\r\n\r\n                                                <Dropdown isOpen={this.state.dropdownOpen12} toggle={this.toggle12} direction='right'>\r\n                                                    <DropdownToggle nav caret>\r\n                                                        <span className=\"mr-2\">Party Rejection Analysis</span>\r\n                                                    </DropdownToggle>\r\n                                                    <DropdownMenu>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-MonPartyRejAnalysisQtyWgt\" >Monthwise Party Rejection Analysis Quantity/Weight Summary</DropdownItem>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-ItemwisePartyRejAnalysisQtyWgt\" >Itemwise Party Rejection Analysis Quantity/Weight Summary</DropdownItem>\r\n                                                        <DropdownItem tag={Link} to=\"/fetch-PartywisePartyRejAnalysisQtyWgt\" >Partywise Party Rejection Analysis Quantity/Weight Summary</DropdownItem>\r\n                                                    </DropdownMenu>\r\n                                                </Dropdown>\r\n\r\n                                                \r\n\r\n\r\n                                                <DropdownItem tag={Link} to=\"/fetch-ItemwiseMouldPourQty\" >Itemwise Moulding VS Pouring Quantity Summary</DropdownItem>\r\n                                                <DropdownItem tag={Link} to=\"/fetch-ItemwiseProdRejQty\" >Itemwise Production VS Rejection Quantity Summary</DropdownItem>\r\n                                               \r\n                                             \r\n                                                    \r\n                                            </DropdownMenu>\r\n                                    </Dropdown>\r\n                                </NavItem>\r\n\r\n\r\n                                <NavItem>\r\n                                    <Dropdown isOpen={this.state.dropdownOpen2} toggle={this.toggle2}>\r\n                                        <DropdownToggle nav caret>\r\n                                            <span className=\"mr-2\">Material Management</span>\r\n                                        </DropdownToggle>\r\n                                            <DropdownMenu>\r\n                                                <DropdownItem tag={Link} to=\"/fetch-MonGIAmtSum\" >Monthwise Goods Inward-Amount Summary</DropdownItem>\r\n                                                <DropdownItem tag={Link} to=\"/fetch-MonGIQtyWgtSum\" >Monthwise Goods Inward-Quantity/Weight Summary</DropdownItem>\r\n                                                <DropdownItem tag={Link} to=\"/fetch-PartywiseGIAmtSum\" >Partywise Goods Inward-Amount Summary</DropdownItem>\r\n                                                <DropdownItem tag={Link} to=\"/fetch-ItemwiseGIQtyWgtSum\" >Itemwise Goods Inward-Quantity/Weight Summary</DropdownItem>\r\n                                                <DropdownItem tag={Link} to=\"/fetch-ItemwiseIssueQtyWgtSum\" >Itemwise Issue -Quantity/Weight Summary</DropdownItem>\r\n                                                <DropdownItem tag={Link} to=\"/fetch-ItemwiseStock\" >Itemwise Stock-Quantity</DropdownItem>\r\n                                                <DropdownItem tag={Link} to=\"/fetch-ProcessingIssue\" >Processing Issue Partywise/Itemwise Summary</DropdownItem>\r\n                                                <DropdownItem tag={Link} to=\"/fetch-ProcessingReceived\" >Processing Received Partywise/Itemwise Summary</DropdownItem>\r\n\r\n                                            </DropdownMenu>\r\n                                           \r\n                                    </Dropdown>\r\n                                </NavItem>\r\n\r\n                                <NavItem>\r\n                                    <Dropdown isOpen={this.state.dropdownOpen3} toggle={this.toggle3}>\r\n                                        <DropdownToggle nav caret>\r\n                                            <span className=\"mr-2\">Sales and Marketing</span>\r\n                                        </DropdownToggle>\r\n                                        <DropdownMenu>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-DailyItemSalesQtyWgt\" >Daily Sales Despatch Itemwise Quantity/Weight</DropdownItem>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-MonSalesAmtBill\" >Monthwise Sales Amount</DropdownItem>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-MonSalesAmtQtyWgtBill\" >Monthwise Sales Amount Quantity/Weight</DropdownItem>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-PartySalesAmtBillentry\" >PartyWise Sales Amount</DropdownItem>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-PartySalesQtyWgtBillentry\" >PartyWise Sales Quantity/Weight</DropdownItem>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-ItemSalesQtyWgt\" >ItemWise Sales Quantity/Weight</DropdownItem>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-MonSalesAmtRateWgtBill\" >Monthly Per/Kg Rate Amount/Weight</DropdownItem>\r\n\r\n\r\n                                           \r\n                                        </DropdownMenu>\r\n                                    </Dropdown>\r\n                                </NavItem>\r\n\r\n                                <NavItem>\r\n                                    <Dropdown isOpen={this.state.dropdownOpen4} toggle={this.toggle4}>\r\n                                        <DropdownToggle nav caret>\r\n                                            <span className=\"mr-2\">Accounts and Finance</span>\r\n                                        </DropdownToggle>\r\n                                        <DropdownMenu>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-TradingExp\" >Ledger Balances-Trading Expenses</DropdownItem>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-TradingInc\" >Ledger Balances-Trading Incomes</DropdownItem>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-PLExp\" >Ledger Balances-P&L Expenses</DropdownItem>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-PLInc\" >Ledger Balances-P&L Incomes</DropdownItem>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-DebList\" >Debtors List</DropdownItem>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-CreList\" >Creditors List</DropdownItem>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-FixAssets\" >Fixed Assets</DropdownItem>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-CurAssets\" >Current Assets</DropdownItem>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-EntTran\" > Entries - Transactions</DropdownItem>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-InvBillsub\" >Entries - Inventory - BillSub</DropdownItem>\r\n                                            <DropdownItem tag={Link} to=\"/fetch-InvGRN\" >Entries - Inventory - GRN</DropdownItem>\r\n                                            \r\n                                        </DropdownMenu>\r\n                                    </Dropdown>\r\n                                </NavItem>\r\n\r\n                                <NavItem>\r\n                                        <Link to={'/'} className=\"nav-link\" onClick={this.logout}>Logout</Link>\r\n                                </NavItem>\r\n\r\n\r\n\r\n                               \r\n                            </ul>\r\n\r\n\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n                <Switch>\r\n                   \r\n                    <Route path=\"/fetch-purOrdEntry\">\r\n                        <Employee />\r\n                    </Route>\r\n                    <Route path=\"/fetch-MonPurOrdAmtSum\">\r\n                        <MPOAS />\r\n                    </Route>\r\n                    <Route path=\"/fetch-MonPurOrdQtySum\">\r\n                        <MPOQS />\r\n                    </Route>\r\n                    <Route path=\"/fetch-PartyPurOrdAmtSum\">\r\n                        <Partywise />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ItemPurOrdQtySum\">\r\n                        <Itemwise />\r\n                    </Route>\r\n\r\n                    {/* BillSub Route */}\r\n                    <Route path=\"/fetch-MonPurAmtBill\">\r\n                        <MPAB />\r\n                    </Route>\r\n                    <Route path=\"/fetch-PartyPurAmtBill\">\r\n                        <PartywiseBillsub />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ItemwiseBillsub\"> \r\n                        <ItemwiseBillsub></ItemwiseBillsub>\r\n                    </Route>\r\n\r\n\r\n                    {/* Sales Route */}\r\n                    <Route path=\"/fetch-MonSalesAmtBill\">\r\n                        <MSAB />\r\n                    </Route>\r\n                    <Route path=\"/fetch-MonSalesAmtQtyWgtBill\">\r\n                        <MSAQWB/>\r\n                    </Route>\r\n                    <Route path=\"/fetch-PartySalesAmtBillentry\">\r\n                            <PartywiseSalesBillentry/>\r\n                    </Route>\r\n                    <Route path=\"/fetch-PartySalesQtyWgtBillentry\">\r\n                        <PartywiseSalesQtyBillentry />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ItemSalesQtyWgt\">\r\n                        <ItemwiseSalesQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-DailyItemSalesQtyWgt\">\r\n                        <DailyItemwiseSalesQtyWgt/>\r\n                    </Route>\r\n                    <Route path=\"/fetch-MonSalesAmtRateWgtBill\">\r\n                            <MRAWB />\r\n                    </Route>\r\n\r\n\r\n\r\n                    {/* Material Management Route\r\n */}\r\n                    <Route path=\"/fetch-MonGIAmtSum\">\r\n                        <MGIAS />\r\n                    </Route>\r\n                    <Route path=\"/fetch-MonGIQtyWgtSum\">\r\n                        <MGIQWS />\r\n                    </Route>\r\n                    <Route path=\"/fetch-PartywiseGIAmtSum\">\r\n                        <PartywiseGIAS />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ItemwiseGIQtyWgtSum\">\r\n                        <ItemwiseGIQWS />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ItemwiseIssueQtyWgtSum\">\r\n                        <ItemwiseIssueQWS/>\r\n                    </Route>\r\n                    <Route path=\"/fetch-ProcessingIssue\">\r\n                            <Processingissue />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ProcessingReceived\">\r\n                        <Processingreceived />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ItemwiseStock\">\r\n                        <ItemwiseStock />\r\n                    </Route>\r\n\r\n\r\n                    {/* Production Module */}\r\n                    <Route path=\"/fetch-MonMouldQty\">\r\n                        <MonthwiseMouldingQty />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ItemwiseMouldQty\">\r\n                        <ItemwiseMouldingQty />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ContracorwiseMouldQty\">\r\n                        <ContractorwiseMouldingQty />\r\n                    </Route>\r\n                    <Route path=\"/fetch-MonPourQtyWgt\">\r\n                        <MonthwisePouringQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ItemwisePourQtyWgt\">\r\n                        <ItemwisePouringingQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ContracorwisePourQtyWgt\">\r\n                        <ContractorwisePouringQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-MonConQtyWgt\">\r\n                        <MonthwiseConsumptionQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ItemwiseConQtyWgt\">\r\n                        <ItemwiseConsumptionQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ContracorwiseConQtyWgt\">\r\n                        <ContractorwiseConsumptionQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-MonProdQtyWgt\">\r\n                        <MonthwiseProductionQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ItemwiseProdQtyWgt\">\r\n                        <ItemwiseProductionQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ContracorwiseProdQtyWgt\">\r\n                       <ContractorwiseProductionQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-MonFREJQtyWgt\">\r\n                        <MonthwiseFirstRejectionQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ItemwiseFREJQtyWgt\">\r\n                        <ItemwiseFirstRejectionQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ContracorwiseFREJQtyWgt\">\r\n                        <ContractorwiseFirstRejectionQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-MonIINDRejQtyWgt\">\r\n                        <MonthwiseIINDRejectionQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ItemwiseIINDRejQtyWgt\">\r\n                        <ItemwiseIINDRejectionQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-PartywiseIINDRejQtyWgt\">\r\n                        <PartywiseIINDRejQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-MonPartyRejQtyWgt\">\r\n                         <MonthwisePartyRejectionQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ItemwisePartyRejQtyWgt\">\r\n                        <ItemwisePartyRejectionQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-PartywisePartyRejQtyWgt\">\r\n                        <PartywisePartyRejQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-MonPartyRejAnalysisQtyWgt\">\r\n                        <MonthwisePartyRejectionAnalysisQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ItemwisePartyRejAnalysisQtyWgt\">\r\n                        <ItemwisePartyRejectionAnalysisQtyWgt />\r\n                    </Route>\r\n                    <Route path=\"/fetch-PartywisePartyRejAnalysisQtyWgt\">\r\n                        <PartywisePartyRejAnalysisQtyWgt />\r\n                    </Route>\r\n\r\n                    <Route path=\"/fetch-ItemwiseMouldPourQty\">\r\n                        <ItemwiseMouldingPouring />\r\n                    </Route>\r\n                    <Route path=\"/fetch-ItemwiseProdRejQty\">\r\n                        <ItemwiseProductionRejecction />\r\n                    </Route>\r\n\r\n\r\n                    {/* Account and Finance */}\r\n                    <Route path=\"/fetch-TradingExp\">\r\n                        <Tradingexpenses />\r\n                    </Route>\r\n                    <Route path=\"/fetch-TradingInc\">\r\n                        <Tradingincomes />\r\n                    </Route>\r\n                    <Route path=\"/fetch-PLExp\">\r\n                        <PLexpenses />\r\n                    </Route>\r\n                    <Route path=\"/fetch-PLInc\">\r\n                        <PLincomes />\r\n                    </Route>\r\n                   <Route path=\"/fetch-DebList\">\r\n                        <DebList />\r\n                    </Route>\r\n                    <Route path=\"/fetch-CreList\">\r\n                        <CreList />\r\n                    </Route>\r\n                    <Route path=\"/fetch-FixAssets\">\r\n                        <FixAssets />\r\n                    </Route>\r\n                    <Route path=\"/fetch-CurAssets\">\r\n                        <CurAssets />\r\n                    </Route>\r\n                    <Route path=\"/fetch-EntTran\">\r\n                        <Entriestran />\r\n                    </Route>\r\n                    <Route path=\"/fetch-InvBillsub\">\r\n                        <InventoryBillSub />\r\n                    </Route>\r\n                    <Route path=\"/fetch-InvGRN\">\r\n                        <InventoryGRN />\r\n                    </Route>\r\n\r\n\r\n\r\n\r\n                </Switch>\r\n\r\n            </header>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './Navigation';\r\n\r\nexport class Layout extends Component {\r\n    static displayName = Layout.name;\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavMenu />\r\n                <Container>\r\n                    {this.props.children}\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory } from 'react-router-dom';\r\nimport Login1 from \"./Login1\";\r\nimport { Layout } from './Layout';\r\n//import { useHistory } from \"react-router-dom\";\r\nimport Employee from './Components/Employee';\r\n\r\nfunction Dashboard() {\r\n\r\n    const history = useHistory();\r\n    const user1 = JSON.parse(localStorage.getItem('myData'));\r\n    //console.warn(user)\r\n\r\n    function logout() {\r\n\r\n        localStorage.clear();\r\n        var a = localStorage.getItem('myData');\r\n        console.warn(a)\r\n        history.push('/login')\r\n\r\n\r\n    }\r\n\r\n    const [user, setuser] = useState({ Username: '', Password: '' });\r\n    useEffect(() => {\r\n        var a = localStorage.getItem('myData');\r\n        var b = JSON.parse(a);\r\n        console.log(b.Username);\r\n        setuser(b)\r\n        console.log(user.USERNAME)\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div class=\"effect\">\r\n            <Router>\r\n\r\n                <Layout>\r\n                    <Switch>\r\n                        {/* <Route exact path={\"/\"} component={Employee} /> */}\r\n                        <Route path=\"/fetch-purOrdEntry\" component={Employee}/>\r\n\r\n\r\n                        <Route />\r\n                    </Switch>\r\n                </Layout>\r\n                \r\n\r\n            </Router>\r\n            </div>\r\n            \r\n            \r\n\r\n        </>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route,useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport Dashboard from \"./Dashboard\";\r\nfunction Login1(props) {\r\n    const [employee, setemployee] = useState({ Username: '', Password: '' });\r\n    const apiUrl = \"http://webapi.local/api/employee/Login\";\r\n    const Login = (e) => {\r\n        e.preventDefault();\r\n        //debugger;\r\n        const data = { Username: employee.Username, Password: employee.Password };\r\n        axios.post(apiUrl, data)\r\n            .then((result) => {\r\n                //debugger;\r\n                console.log(result.data);\r\n                const serializedState = JSON.stringify(result.data.UserDetails);\r\n                var a = localStorage.setItem('myData', serializedState);\r\n                console.log(\"A:\", a)\r\n                const user = result.data.UserDetails;\r\n                console.log(result.data.message);\r\n                if (result.data.status == '200')\r\n                    props.history.push('/Dashboard')\r\n                else\r\n                    alert('Invalid User');\r\n            })\r\n    };\r\n\r\n\r\n\r\n    const onChange = (e) => {\r\n        e.persist();\r\n        // debugger;\r\n        setemployee({ ...employee, [e.target.name]: e.target.value });\r\n    }\r\n    return (\r\n        \r\n        <div class=\"container\">\r\n            <div class=\"row justify-content-center\">\r\n                <div class=\"col-xl-5 col-lg-8 col-md-9\">\r\n                    <div class=\"card o-hidden border-0 shadow-lg my-5\">\r\n                        <div class=\"card-body p-0\">\r\n\r\n                            <div class=\"row\">\r\n                                {/* <div class=\"col-lg-6 d-none d-lg-block bg-login-image\"></div> */}\r\n                                <div class=\"col-lg-12\">\r\n                                    <div class=\"p-5\">\r\n                                        <div class=\"text-center\">\r\n                                            <h1 class=\"h4 text-gray-900 mb-4 \">Riddhi Casting Pvt Ltd</h1>\r\n                                            <h1 class=\"h4 text-gray-900 mb-4 \">Welcome Back!</h1>\r\n                                        </div>\r\n                                        <form onSubmit={Login} class=\"user\">\r\n                                            <div class=\"form-group\" >\r\n                                                <input type=\"text\" class=\"form-control\" value={employee.Username} onChange={onChange} name=\"Username\" id=\"Email\" placeholder=\"Enter Username\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <input type=\"password\" class=\"form-control\" value={employee.Password} onChange={onChange} name=\"Password\" id=\"DepPasswordartment\" placeholder=\"Password\" />\r\n                                            </div>\r\n\r\n                                            <div class=\"text-center\">\r\n                                                <button type=\"submit\" className=\"btn btn-info mb-1 \" block><span>Login</span></button>\r\n                                            </div>\r\n                                        </form>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"effect\">\r\n                <Router>\r\n\r\n                    \r\n                        <Switch>\r\n                            {/* <Route exact path={\"/\"} component={Employee} /> */}\r\n                            <Route path='/Dashboard' component={Dashboard}/>\r\n\r\n                           \r\n                        </Switch>\r\n\r\n\r\n                </Router>\r\n            </div>\r\n        </div>\r\n        \r\n      \r\n            \r\n            \r\n            \r\n\r\n      \r\n    )\r\n}\r\n\r\nexport default Login1\r\n\r\n\r\n\r\n","//import React, { Component } from 'react';\r\n\r\n/* export class Home extends Component {\r\n    static displayName = Home.name;\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n              \r\n               \r\n            </div>\r\n        );\r\n    }\r\n} */\r\n\r\n\r\nimport { render } from '@testing-library/react';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory } from 'react-router-dom';\r\nimport Login1 from \"./Login1\";\r\nimport { NavMenu } from './Navigation';\r\nimport { Layout } from './Layout';\r\nimport Employee from './Components/Employee';\r\n//import { useHistory } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n\r\n    const history = useHistory();\r\n    const user1 = JSON.parse(localStorage.getItem('myData'));\r\n    //console.warn(user)\r\n\r\n    function logout() {\r\n\r\n        localStorage.clear();\r\n        var a = localStorage.getItem('myData');\r\n        console.warn(a)\r\n        history.push('/login')\r\n\r\n\r\n    }\r\n\r\n   /*  const [user, setuser] = useState({ Username: '', Password: '' });\r\n    useEffect(() => {\r\n        var a = localStorage.getItem('myData');\r\n        var b = JSON.parse(a);\r\n        console.log(b.Username);\r\n        setuser(b)\r\n        console.log(user.USERNAME)\r\n\r\n    }, []); */\r\n    \r\n    return (\r\n        <Router>\r\n\r\n            <Layout>\r\n                <Switch>\r\n                    <Route exact path={\"/\"} component={Employee} />\r\n                    {/* <Route path=\"/fetch-purOrdEntry\" component={Employee}/> */}\r\n\r\n\r\n                    <Route />\r\n                </Switch>\r\n            </Layout>\r\n\r\n        </Router>\r\n\r\n    )\r\n    \r\n   \r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Home\r\n","import logo from './logo.svg';\nimport './App.css';\nimport {NavMenu} from './Navigation';\nimport { Layout } from './Layout';\n\nimport { Home } from './Home';\nimport { Employee } from './Components/Employee';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\nimport { Link, Route, BrowserRouter as Router, BrowserRouter } from 'react-router-dom';\nimport Switch from 'react-bootstrap/esm/Switch';\nimport Login1 from './Login1';\nimport Dashboard from \"./Dashboard\";\n\nfunction App() {\n  return (\n    <Router>\n     \n       \n        <Switch>\n          <Route exact path='/' component={Login1} />\n\n          <Route path='/Dashboard' component={Dashboard} />\n        </Switch>\n      \n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}